#include <stdio.h>
#include <stdlib.h>
#include "mineSweeper.h"
#include "getch.h"
#include "colorPrint.h"

int main(){
//  create the objects for the game.
//  cursorCoords is array, [0] is num of row, [1] is num of col 
    int cursorCoords[2];
    cursorCoords[0] = 0;
    cursorCoords[1] = 0;
    int level = 0;
    int row = 0 ;
    int col = 0 ;
    GameBoard g;
//  ask for input till you got number between 1-3.     
    while((level<1|| level >3)){
        clearScreen();
        printf("Please enter leve between 1-3: ");
        scanf( "%d",&level);
    }
    printf("Please enter number of ROWS big then 0: ");
    scanf( "%d",&row);
        if(row<1)
            printf(" Small then 0, you got default ROWS of 20\n");
    printf("Please enter number of cols big then 0:  ");
    scanf( "%d",&col);
        if(col<1)
            printf(" Small then 0, you got default COLS of 20\n"); 
    if(row<1 || col<1  ){
        row=20;
        col=20;
    }

    clearScreen();
//  create the board game    
    initBoard ( &g, row,col,level );
    getch();
    char cmd = ' ';
    
    while(cmd != QUIT){
        clearScreen(); 
        printBoard( &g ,cursorCoords );
        cmd =getch();
        
        switch (cmd ) {
           
            case FLAG_TILE:
			    flagTile(&g, cursorCoords[0], cursorCoords[1]);
			    break;
			case CLICK_TILE:
			    clickTile(&g, cursorCoords[0], cursorCoords[1]);
			    if ( g.isMineClicked == TRUE ){
			    	clearScreen(); 
                    printBoard( &g ,cursorCoords );   
			    	printf("Mine is clicked!!  \nHope you'll win next time.");
			    	return 0;
			    }
			    if (g.totalMines == g.hiddenTiles){
			    	clearScreen(); 
                    printBoard( &g ,cursorCoords );
				   	printf("YOU WON!!! \nSee you next time !\n");
				   	return 0;
				   	break;
			    }
				break;
			case UP:
				if(cursorCoords[0]>0)
				    cursorCoords[0]--;
				break;
			case DOWN:
				if (cursorCoords[0] < g.rows-1)
				    cursorCoords[0]++; 
			    break;
			case LEFT:
				if(cursorCoords[1]>0)
				    cursorCoords[1]--;
				break;
			case RIGHT:
				if(cursorCoords[1]< g.cols-1)
					cursorCoords[1]++;
				break;
			case QUIT:
			default:
					printf("char 'Q' is prassed. Goodbye \n");
					break;
		}
    }
    return 0;
}


